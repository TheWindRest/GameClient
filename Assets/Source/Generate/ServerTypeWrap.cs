//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ServerTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(ServerType));
		L.RegVar("LoginServer", get_LoginServer, null);
		L.RegVar("GateServer", get_GateServer, null);
		L.RegVar("CenterServer", get_CenterServer, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<ServerType>.Check = CheckType;
		StackTraits<ServerType>.Push = Push;
	}

	static void Push(IntPtr L, ServerType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(ServerType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoginServer(IntPtr L)
	{
		ToLua.Push(L, ServerType.LoginServer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GateServer(IntPtr L)
	{
		ToLua.Push(L, ServerType.GateServer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CenterServer(IntPtr L)
	{
		ToLua.Push(L, ServerType.CenterServer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		ServerType o = (ServerType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

